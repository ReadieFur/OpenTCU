[user_config]
build_flags =
	-D WIFI_SSID=\"BT-S3A2W2\"
	-D WIFI_PASSWORD=\"Uq3IA2I56D4W\" ;What do I care if I show my WiFi password to the world?

[globals]
extends = user_config
platform = espressif32
framework = espidf
build_type = release
build_flags =
	${user_config.build_flags}
	-Wno-unknown-pragmas ;https://stackoverflow.com/questions/12894454/how-to-remove-gcc-warning-on-pragma-region
	-DCORE_DEBUG_LEVEL=5 ;https://community.platformio.org/t/how-to-set-up-log-level-to-be-able-to-debug-the-esp32/8278
	-Wno-format ;Caused by a format error within esp_log.h
	-Wno-missing-field-initializers
	-Wno-unused-variable
	-Wno-comment
	-fno-exceptions
build_unflags =
	-fexceptions
monitor_raw = yes
monitor_speed = 115200
;https://community.platformio.org/t/color-messages-to-terminal-via-serial-monitor/15041/4
; monitor_filters = 
; 	colorize
; 	debug
; 	esp32_exception_decoder
; 	time

[debug]
framework = arduino ;I don't want to use the arduino framework at all, however, unfortunately I need it for some of the debugging libraries that I am using.
build_type = debug
lib_extra_dirs = components
test_framework = unity
test_speed = 115200
;TODO: Figure out how to use the remote upload feature within this config file (I work on my desktop machine but upload to my laptop which is connected to the ESP32 in a different room)
debug_tool = esp-builtin
debug_init_break = break setup
debug_server = 
	C:/Users/ReadieFur/.platformio/packages/tool-openocd-esp32/bin/openocd
	-f
; debug_test = *
build_flags =
	#region Developer configuration
	-D DEBUG_ADDR=\"192.168.1.163\"
	-D NTP_SERVER=\"time.cloudflare.com\"
	; -D ENABLE_WIFI_SERVER
	; -D ENABLE_UWP_SERVER
	-D ENABLE_SERIAL_CAN_DUMP
	-D CAN_DUMP_IMMEDIATE
	; -D ENABLE_UWP_CAN_DUMP
	; -D ENABLE_POWER_CHECK=0 ;Undefine to disable power check, 0 for task based, 1 for interrupt based.
	; -D INJECT_PAUSES_RELAY_TASKS
	-D DEBUG_LOG_LEVEL=ESP_LOG_DEBUG
	#endregion
	#region Misc
	-D _DEBUG
	;https://github.com/espressif/openocd-esp32/issues/246
	-O0
	-g
	-D CONFIG_COMPILER_OPTIMIZATION_NONE
	; -v
; build_unflags =
; 	- -fno-exceptions
lib_ldf_mode = deep ;https://github.com/me-no-dev/ESPAsyncWebServer/issues/520
lib_deps =
	; platformio/tool-openocd-esp32@^2.1200.20230419
	roboticsbrno/SmartLeds@^3.1.2
	esphome/AsyncTCP-esphome@^2.1.1
	esphome/ESPAsyncWebServer-esphome@^3.1.0
	asjdf/WebSerialLite@^2.3.0

[c3]
extends = globals
build_flags =
	${globals.build_flags}
	-D C3
	-D SPI_INT_PIN=GPIO_NUM_4
	-D SPI_SCK_PIN=GPIO_NUM_0
	-D SPI_MOSI_PIN=GPIO_NUM_1
	-D SPI_MISO_PIN=GPIO_NUM_2
	-D SPI_CS_PIN=GPIO_NUM_3
	-D TWAI_TX_PIN=GPIO_NUM_7
	-D TWAI_RX_PIN=GPIO_NUM_6
	-D LED_PIN=GPIO_NUM_8
	-D BIKE_POWER_PIN=GPIO_NUM_10
	-D BIKE_POWER_CHECK_PIN=GPIO_NUM_5

[env:c3_mini]
extends = c3
board = wifiduino32c3

[env:c3_dev]
extends = c3, debug
board = esp32-c3-devkitm-1
debug_server = 
	${debug.debug_server}
	C:/Users/ReadieFur/.platformio/packages/tool-openocd-esp32/share/openocd/scripts/board/esp32c3-builtin.cfg
build_flags =
	${c3.build_flags}
	${debug.build_flags}

[s3]
extends = globals
build_flags =
	${globals.build_flags}
	-D S3
	-D TWAI_TX_PIN=GPIO_NUM_2
	-D TWAI_RX_PIN=GPIO_NUM_3
	-D SPI_CS_PIN=GPIO_NUM_4
	-D SPI_INT_PIN=GPIO_NUM_5
	-D SPI_SCK_PIN=GPIO_NUM_12
	-D SPI_MISO_PIN=GPIO_NUM_13
	-D SPI_MOSI_PIN=GPIO_NUM_11
	-D LED_PIN=GPIO_NUM_8
	-D BIKE_POWER_PIN=GPIO_NUM_17
	-D BIKE_POWER_CHECK_PIN=GPIO_NUM_21
	-D USER_GPIO_PIN1=GPIO_NUM_34
	-D USER_GPIO_PIN2=GPIO_NUM_38
	-D USER_GPIO_PIN3=GPIO_NUM_37
	-D USER_GPIO_PIN4=GPIO_NUM_33

; Production chip.
[env:s3_mini]
extends = s3
board = lolin_s3_mini

; Supports debugging.
[env:s3_dev]
extends = s3, debug
board = lolin_s3
debug_server =
	${debug.debug_server}
	C:/Users/ReadieFur/.platformio/packages/tool-openocd-esp32/share/openocd/scripts/board/esp32s3-builtin.cfg
build_flags =
	${s3.build_flags}
	${debug.build_flags}
